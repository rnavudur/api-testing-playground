{"code":"var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});import{createServer}from\"http\";import{storage}from\"./storage\";import{apiRequestConfigSchema}from\"@shared/schema\";import axios from\"axios\";async function registerRoutes(app){app.post(\"/api/proxy\",async(req,res)=>{try{const config=apiRequestConfigSchema.parse(req.body);const startTime=Date.now();const url=new URL(config.url);Object.entries(config.queryParams||{}).forEach(([key,value])=>{if(value)url.searchParams.append(key,value)});const response=await axios({method:config.method,url:url.toString(),headers:config.headers,data:config.body?JSON.parse(config.body):void 0,timeout:3e4,validateStatus:__name(()=>true,\"validateStatus\")});const responseTime=`${Date.now()-startTime}ms`;const apiRequest=await storage.createApiRequest({method:config.method,url:config.url,headers:config.headers||{},queryParams:config.queryParams||{},body:config.body,response:response.data,responseHeaders:response.headers,status:response.statusText,statusCode:response.status.toString(),responseTime});res.json({id:apiRequest.id,data:response.data,status:response.status,statusText:response.statusText,headers:response.headers,responseTime})}catch(error){console.error(\"Proxy error:\",error);if(error.code===\"ECONNABORTED\"){return res.status(408).json({error:\"Request timeout\",message:\"The request took too long to complete\"})}if(error.code===\"ENOTFOUND\"||error.code===\"ECONNREFUSED\"){return res.status(502).json({error:\"Connection failed\",message:\"Could not connect to the API endpoint\"})}res.status(500).json({error:\"Request failed\",message:error.message||\"An unexpected error occurred\"})}});app.get(\"/api/history\",async(req,res)=>{try{const history=await storage.getApiRequests();res.json(history)}catch(error){res.status(500).json({error:\"Failed to fetch history\"})}});app.get(\"/api/history/:id\",async(req,res)=>{try{const request=await storage.getApiRequest(req.params.id);if(!request){return res.status(404).json({error:\"Request not found\"})}res.json(request)}catch(error){res.status(500).json({error:\"Failed to fetch request\"})}});const httpServer=createServer(app);return httpServer}__name(registerRoutes,\"registerRoutes\");export{registerRoutes};\n","warnings":[],"map":{"version":3,"mappings":"kHACA,OAAS,iBAAiC,OAC1C,OAAS,YAAe,YACxB,OAAiC,2BAA8B,iBAC/D,OAAO,UAAW,QAElB,eAAsB,eAAe,IAA+B,CAElE,IAAI,KAAK,aAAc,MAAO,IAAK,MAAQ,CACzC,GAAI,CACF,MAAM,OAAS,uBAAuB,MAAM,IAAI,IAAI,EACpD,MAAM,UAAY,KAAK,IAAI,EAG3B,MAAM,IAAM,IAAI,IAAI,OAAO,GAAG,EAC9B,OAAO,QAAQ,OAAO,aAAe,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,IAAK,KAAK,IAAM,CACjE,GAAI,MAAO,IAAI,aAAa,OAAO,IAAK,KAAK,CAC/C,CAAC,EAGD,MAAM,SAAW,MAAM,MAAM,CAC3B,OAAQ,OAAO,OACf,IAAK,IAAI,SAAS,EAClB,QAAS,OAAO,QAChB,KAAM,OAAO,KAAO,KAAK,MAAM,OAAO,IAAI,EAAI,OAC9C,QAAS,IACT,eAAgB,WAAM,KAAN,iBAClB,CAAC,EAED,MAAM,aAAe,GAAG,KAAK,IAAI,EAAI,SAAS,KAG9C,MAAM,WAAa,MAAM,QAAQ,iBAAiB,CAChD,OAAQ,OAAO,OACf,IAAK,OAAO,IACZ,QAAS,OAAO,SAAW,CAAC,EAC5B,YAAa,OAAO,aAAe,CAAC,EACpC,KAAM,OAAO,KACb,SAAU,SAAS,KACnB,gBAAiB,SAAS,QAC1B,OAAQ,SAAS,WACjB,WAAY,SAAS,OAAO,SAAS,EACrC,YACF,CAAC,EAED,IAAI,KAAK,CACP,GAAI,WAAW,GACf,KAAM,SAAS,KACf,OAAQ,SAAS,OACjB,WAAY,SAAS,WACrB,QAAS,SAAS,QAClB,YACF,CAAC,CACH,OAAS,MAAY,CACnB,QAAQ,MAAM,eAAgB,KAAK,EAGnC,GAAI,MAAM,OAAS,eAAgB,CACjC,OAAO,IAAI,OAAO,GAAG,EAAE,KAAK,CAC1B,MAAO,kBACP,QAAS,uCACX,CAAC,CACH,CAEA,GAAI,MAAM,OAAS,aAAe,MAAM,OAAS,eAAgB,CAC/D,OAAO,IAAI,OAAO,GAAG,EAAE,KAAK,CAC1B,MAAO,oBACP,QAAS,uCACX,CAAC,CACH,CAEA,IAAI,OAAO,GAAG,EAAE,KAAK,CACnB,MAAO,iBACP,QAAS,MAAM,SAAW,8BAC5B,CAAC,CACH,CACF,CAAC,EAGD,IAAI,IAAI,eAAgB,MAAO,IAAK,MAAQ,CAC1C,GAAI,CACF,MAAM,QAAU,MAAM,QAAQ,eAAe,EAC7C,IAAI,KAAK,OAAO,CAClB,OAAS,MAAO,CACd,IAAI,OAAO,GAAG,EAAE,KAAK,CAAE,MAAO,yBAA0B,CAAC,CAC3D,CACF,CAAC,EAGD,IAAI,IAAI,mBAAoB,MAAO,IAAK,MAAQ,CAC9C,GAAI,CACF,MAAM,QAAU,MAAM,QAAQ,cAAc,IAAI,OAAO,EAAE,EACzD,GAAI,CAAC,QAAS,CACZ,OAAO,IAAI,OAAO,GAAG,EAAE,KAAK,CAAE,MAAO,mBAAoB,CAAC,CAC5D,CACA,IAAI,KAAK,OAAO,CAClB,OAAS,MAAO,CACd,IAAI,OAAO,GAAG,EAAE,KAAK,CAAE,MAAO,yBAA0B,CAAC,CAC3D,CACF,CAAC,EAED,MAAM,WAAa,aAAa,GAAG,EACnC,OAAO,UACT,CAjGsB","names":[],"ignoreList":[],"sources":["/home/runner/workspace/server/routes.ts"],"sourcesContent":[null]}}