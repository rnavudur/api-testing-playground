{"code":"var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});import{apiRequests,users}from\"@shared/schema\";import{randomUUID}from\"crypto\";import{db}from\"./db\";import{eq}from\"drizzle-orm\";class DatabaseStorage{static{__name(this,\"DatabaseStorage\")}async createApiRequest(insertRequest){const[apiRequest]=await db.insert(apiRequests).values(insertRequest).returning();return apiRequest}async getApiRequests(){return await db.select().from(apiRequests).orderBy(apiRequests.createdAt)}async getApiRequestsByUserId(userId){return await db.select().from(apiRequests).where(eq(apiRequests.userId,userId)).orderBy(apiRequests.createdAt)}async getApiRequest(id){const[apiRequest]=await db.select().from(apiRequests).where(eq(apiRequests.id,id));return apiRequest}async createUser(user){const[newUser]=await db.insert(users).values(user).returning();return newUser}async findUserByEmail(email){const[user]=await db.select().from(users).where(eq(users.email,email));return user}async findUserByUsername(username){const[user]=await db.select().from(users).where(eq(users.username,username));return user}async findUserById(id){const[user]=await db.select().from(users).where(eq(users.id,id));return user}}class MemStorage{static{__name(this,\"MemStorage\")}apiRequests;users;constructor(){this.apiRequests=new Map;this.users=new Map}async createApiRequest(insertRequest){const id=randomUUID();const apiRequest={...insertRequest,id,body:insertRequest.body||null,headers:insertRequest.headers||null,queryParams:insertRequest.queryParams||null,responseHeaders:insertRequest.responseHeaders||null,response:insertRequest.response||null,status:insertRequest.status||null,statusCode:insertRequest.statusCode||null,responseTime:insertRequest.responseTime||null,createdAt:new Date};this.apiRequests.set(id,apiRequest);return apiRequest}async getApiRequests(){return Array.from(this.apiRequests.values()).sort((a,b)=>(b.createdAt?.getTime()||0)-(a.createdAt?.getTime()||0))}async getApiRequest(id){return this.apiRequests.get(id)}async createUser(user){const id=randomUUID();const newUser={...user,id,firstName:user.firstName||null,lastName:user.lastName||null,profileImageUrl:null,createdAt:new Date,updatedAt:new Date};this.users.set(id,newUser);return newUser}async findUserByEmail(email){return Array.from(this.users.values()).find(user=>user.email===email)}async findUserByUsername(username){return Array.from(this.users.values()).find(user=>user.username===username)}async findUserById(id){return this.users.get(id)}}const storage=new DatabaseStorage;export{DatabaseStorage,MemStorage,storage};\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"ignoreList":[],"sources":["/home/runner/workspace/server/storage.ts"],"sourcesContent":[null]}}