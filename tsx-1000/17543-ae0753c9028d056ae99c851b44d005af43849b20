{"code":"var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});import{createServer}from\"http\";import{storage}from\"./storage\";import{apiRequestConfigSchema,loginSchema,signupSchema}from\"@shared/schema\";import axios from\"axios\";import session from\"express-session\";import connectPg from\"connect-pg-simple\";import{authService}from\"./auth\";async function registerRoutes(app){const pgStore=connectPg(session);app.use(session({store:new pgStore({conString:process.env.DATABASE_URL,createTableIfMissing:true}),secret:process.env.SESSION_SECRET||\"dev-secret-change-in-production\",resave:false,saveUninitialized:false,cookie:{secure:false,maxAge:7*24*60*60*1e3}}));const requireAuth=__name((req,res,next)=>{if(!req.session.userId){return res.status(401).json({message:\"Unauthorized\"})}next()},\"requireAuth\");app.post(\"/api/auth/signup\",async(req,res)=>{try{const data=signupSchema.parse(req.body);const existingUser=await storage.findUserByEmail(data.email);if(existingUser){return res.status(400).json({message:\"User with this email already exists\"})}const existingUsername=await storage.findUserByUsername(data.username);if(existingUsername){return res.status(400).json({message:\"Username already taken\"})}const user=await authService.createUser({email:data.email,username:data.username,firstName:data.firstName,lastName:data.lastName,password:data.password});res.status(201).json({message:\"User created successfully\",user:{id:user.id,email:user.email,username:user.username,firstName:user.firstName,lastName:user.lastName}})}catch(error){console.error(\"Signup error:\",error);if(error.name===\"ZodError\"){return res.status(400).json({message:\"Invalid input data\",errors:error.errors})}res.status(500).json({message:\"Failed to create user\"})}});app.post(\"/api/auth/login\",async(req,res)=>{try{const credentials=loginSchema.parse(req.body);const user=await authService.authenticateUser(credentials);if(!user){return res.status(401).json({message:\"Invalid credentials\"})}req.session.userId=user.id;res.json({message:\"Login successful\",user:{id:user.id,email:user.email,username:user.username,firstName:user.firstName,lastName:user.lastName}})}catch(error){console.error(\"Login error:\",error);if(error.name===\"ZodError\"){return res.status(400).json({message:\"Invalid input data\"})}res.status(500).json({message:\"Login failed\"})}});app.post(\"/api/auth/logout\",(req,res)=>{req.session.destroy(err=>{if(err){return res.status(500).json({message:\"Logout failed\"})}res.json({message:\"Logout successful\"})})});app.get(\"/api/auth/user\",async(req,res)=>{try{const userId=req.session?.userId;if(!userId){return res.status(401).json({message:\"Unauthorized\"})}const user=await storage.findUserById(userId);if(!user){return res.status(401).json({message:\"User not found\"})}res.json({id:user.id,email:user.email,username:user.username,firstName:user.firstName,lastName:user.lastName})}catch(error){console.error(\"User fetch error:\",error);res.status(500).json({message:\"Failed to fetch user\"})}});app.post(\"/api/proxy\",requireAuth,async(req,res)=>{try{const config=apiRequestConfigSchema.parse(req.body);const startTime=Date.now();const url=new URL(config.url);Object.entries(config.queryParams||{}).forEach(([key,value])=>{if(value)url.searchParams.append(key,value)});const response=await axios({method:config.method,url:url.toString(),headers:config.headers,data:config.body?JSON.parse(config.body):void 0,timeout:3e4,validateStatus:__name(()=>true,\"validateStatus\")});const responseTime=`${Date.now()-startTime}ms`;const apiRequest=await storage.createApiRequest({method:config.method,url:config.url,headers:config.headers||{},queryParams:config.queryParams||{},body:config.body,response:response.data,responseHeaders:response.headers,status:response.statusText,statusCode:response.status.toString(),responseTime});res.json({id:apiRequest.id,data:response.data,status:response.status,statusText:response.statusText,headers:response.headers,responseTime})}catch(error){console.error(\"Proxy error:\",error);if(error.code===\"ECONNABORTED\"){return res.status(408).json({error:\"Request timeout\",message:\"The request took too long to complete\"})}if(error.code===\"ENOTFOUND\"||error.code===\"ECONNREFUSED\"){return res.status(502).json({error:\"Connection failed\",message:\"Could not connect to the API endpoint\"})}res.status(500).json({error:\"Request failed\",message:error.message||\"An unexpected error occurred\"})}});app.get(\"/api/history\",requireAuth,async(req,res)=>{try{const history=await storage.getApiRequests();res.json(history)}catch(error){res.status(500).json({error:\"Failed to fetch history\"})}});app.get(\"/api/history/:id\",requireAuth,async(req,res)=>{try{const request=await storage.getApiRequest(req.params.id);if(!request){return res.status(404).json({error:\"Request not found\"})}res.json(request)}catch(error){res.status(500).json({error:\"Failed to fetch request\"})}});const httpServer=createServer(app);return httpServer}__name(registerRoutes,\"registerRoutes\");export{registerRoutes};\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"ignoreList":[],"sources":["/home/runner/workspace/server/routes.ts"],"sourcesContent":[null]}}